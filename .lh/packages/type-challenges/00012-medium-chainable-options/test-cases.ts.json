{
    "sourceFile": "packages/type-challenges/00012-medium-chainable-options/test-cases.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 10,
            "patches": [
                {
                    "date": 1659796700965,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1659797946725,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,17 +1,42 @@\n-import type { Equal, Expect } from '@type-challenges/utils'\n-declare const config: Chainable\n+import type { Alike, Expect } from '@type-challenges/utils'\n \n-const result = config\n+declare const a: Chainable\n+\n+const result1 = a\n   .option('foo', 123)\n+  .option('bar', { value: 'Hello World' })\n   .option('name', 'type-challenges')\n-  .option('bar', { value: 'Hello World' })\n   .get()\n \n-// 期望 result 的类型是：\n-interface Result {\n+const result2 = a\n\\ No newline at end of file\n+  .option('name', 'another name')\n+  // @ts-expect-error\n+  .option('name', 'last name')\n+  .get()\n+\n+const result3 = a\n+  .option('name', 'another name')\n+  .option('name', 123)\n+  .get()\n+\n+type cases = [\n+  Expect<Alike<typeof result1, Expected1>>,\n+  Expect<Alike<typeof result2, Expected2>>,\n+  Expect<Alike<typeof result3, Expected3>>,\n+]\n+\n+type Expected1 = {\n   foo: number\n-  name: string\n   bar: {\n     value: string\n   }\n-}\n+  name: string\n+}\n+\n+type Expected2 = {\n+  name: string\n+}\n+\n+type Expected3 = {\n+  name: number\n+}\n"
                },
                {
                    "date": 1659799148160,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n import type { Alike, Expect } from '@type-challenges/utils'\n \n declare const a: Chainable\n \n+const test = a.option('t',1)\n const result1 = a\n   .option('foo', 123)\n   .option('bar', { value: 'Hello World' })\n   .option('name', 'type-challenges')\n@@ -38,5 +39,5 @@\n }\n \n type Expected3 = {\n   name: number\n-}\n\\ No newline at end of file\n+}\n"
                },
                {
                    "date": 1659799154306,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import type { Alike, Expect } from '@type-challenges/utils'\n \n declare const a: Chainable\n \n-const test = a.option('t',1)\n+const test =typeof  a.option('t',1)\n const result1 = a\n   .option('foo', 123)\n   .option('bar', { value: 'Hello World' })\n   .option('name', 'type-challenges')\n"
                },
                {
                    "date": 1659799205255,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import type { Alike, Expect } from '@type-challenges/utils'\n \n declare const a: Chainable\n \n-const test =typeof  a.option('t',1)\n+const test = a.option('t',1)\n const result1 = a\n   .option('foo', 123)\n   .option('bar', { value: 'Hello World' })\n   .option('name', 'type-challenges')\n"
                },
                {
                    "date": 1659799211585,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,14 +2,17 @@\n \n declare const a: Chainable\n \n const test = a.option('t',1)\n+\n const result1 = a\n   .option('foo', 123)\n   .option('bar', { value: 'Hello World' })\n   .option('name', 'type-challenges')\n   .get()\n \n+\n+\n const result2 = a\n   .option('name', 'another name')\n   // @ts-expect-error\n   .option('name', 'last name')\n"
                },
                {
                    "date": 1659799494103,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,8 +28,21 @@\n   Expect<Alike<typeof result2, Expected2>>,\n   Expect<Alike<typeof result3, Expected3>>,\n ]\n \n+\n+// 分析\n+/*\n+ var t = {\n+    foo:123,\n+    bar:{ value: 'Hello World' },\n+    name: 'type-challenges'\n+  }\n+\n+ type a = typeof t\n+\n+ 既将其转换为object\n+*/\n type Expected1 = {\n   foo: number\n   bar: {\n     value: string\n"
                },
                {
                    "date": 1659799537615,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,9 @@\n \n declare const a: Chainable\n \n const test = a.option('t',1)\n+const t = typeof test;\n \n const result1 = a\n   .option('foo', 123)\n   .option('bar', { value: 'Hello World' })\n"
                },
                {
                    "date": 1659800327309,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import type { Alike, Expect } from '@type-challenges/utils'\n \n declare const a: Chainable\n \n-const test = a.option('t',1)\n+const test = a.option('t',1).option('t1',1)\n const t = typeof test;\n \n const result1 = a\n   .option('foo', 123)\n"
                },
                {
                    "date": 1659800551093,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import type { Alike, Expect } from '@type-challenges/utils'\n \n declare const a: Chainable\n \n-const test = a.option('t',1).option('t1',1)\n+const test = a.option('t',1).option('t1',1).get()\n const t = typeof test;\n \n const result1 = a\n   .option('foo', 123)\n"
                },
                {
                    "date": 1659882561705,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n \n declare const a: Chainable\n \n const test = a.option('t',1).option('t1',1).get()\n-const t = typeof test;\n+type TT = typeof test;\n \n const result1 = a\n   .option('foo', 123)\n   .option('bar', { value: 'Hello World' })\n"
                }
            ],
            "date": 1659796700965,
            "name": "Commit-0",
            "content": "import type { Equal, Expect } from '@type-challenges/utils'\ndeclare const config: Chainable\n\nconst result = config\n  .option('foo', 123)\n  .option('name', 'type-challenges')\n  .option('bar', { value: 'Hello World' })\n  .get()\n\n// 期望 result 的类型是：\ninterface Result {\n  foo: number\n  name: string\n  bar: {\n    value: string\n  }\n}"
        }
    ]
}